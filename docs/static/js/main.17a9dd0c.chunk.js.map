{"version":3,"sources":["AddCategory.js","helpers/getGifs.js","GifGridItem.js","GiftGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GiftGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GiftExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAkB9C,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAS,IACnBP,GAAe,SAAAQ,GAAI,OAAKN,GAAL,mBAAoBM,OACvCL,EAAc,MAMlB,SACI,uBACIM,KAAK,OACLC,MAAQR,EACRS,SAnBc,SAAEN,GACxBF,EAAeE,EAAEO,OAAOF,a,+BCRnBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAErC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,4BAAIA,QCHHO,EAAW,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDd,SAAEA,GAAe,IAAD,EAEdb,mBAAS,CAC/BoB,KAAM,GACNa,SAAS,IAJ2B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAEC,GACLH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAEGqB,EDhB0BK,CAAc1B,GAAlCa,EAFyB,EAE9BN,KAAaa,EAFiB,EAEjBA,QAErB,OACI,qCACI,6BAAMpB,IAEN,sBAAKgB,UAAU,YAAf,UACUI,GAAW,mBAAGJ,UAAU,mCAAb,wBAETH,EAAOJ,KAAK,SAAEC,GAAF,OACR,cAAC,EAAD,eAEKA,GADEA,EAAIC,cEb1BgB,EAAgB,WAAM,MAGKxC,mBAAS,CAAC,WAHf,mBAGxByC,EAHwB,KAGZ1C,EAHY,KAU/B,OACI,qCACA,+CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ0C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCjB9B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.17a9dd0c.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value )\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if(inputValue.length > 2) {\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('')\r\n        }\r\n        \r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />   \r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}\r\n","export const getGifs = async( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=b3kOvYHypnnGzMz093OmnxhdiXKrbjrg`\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n\r\n    return (\r\n        <div className=\"card  animate__animated animate__zoomIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGifs } from './hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GiftGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n         \r\n            <div className=\"card-grid\">\r\n                    { loading && <p className=\"animate__animated animate__flash\">Loading...</p>}\r\n                    { \r\n                        images.map( ( img ) => (\r\n                            <GifGridItem \r\n                            key = {img.id}\r\n                            { ...img }\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( ( imgs ) => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, {useState} from 'react';\r\nimport { AddCategory } from './AddCategory';\r\nimport { GiftGrid } from './GiftGrid';\r\n\r\nexport const GiftExpertApp = () => {\r\n\r\n    // const categories = ['Pluto', 'JJK', 'Bleach'];\r\n    const [categories, setCategories] = useState(['Naruto'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories, 'Naruto']);\r\n    //     setCategories( cats => [...categories, 'Naruto'] );\r\n    // } \r\n\r\n    return (\r\n        <>\r\n        <h2>GiftExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr />\r\n\r\n        <ol>\r\n            {\r\n                categories.map( category => (\r\n                    <GiftGrid \r\n                        key={ category }\r\n                        category={ category }\r\n                    />\r\n\r\n                ))\r\n            }\r\n        </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}